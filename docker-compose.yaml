version: '3.7'

services:
  db:
    container_name: db
    image: postgres:latest
    build:
      context: ./db
    ports:
      - "5432:5432"
    networks:
      - bank
    healthcheck:
      test: ["CMD", "pg_isready", "--host", "localhost", "--port", "5432"]
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    environment:
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_USER=admin
    ports:
      - "5672:5672"
    networks:
      - bank
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s


  rabbitmq-starter:
    container_name: rabbitmq-starter
    build:
      context: "./backend/microservices/rabbitmq"
    networks:
      - bank
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./backend/microservices/rabbitmq/.env.docker

  email:
    container_name: email-microservice
    build:
      context: "./backend/microservices/email"
    networks:
      - bank
    depends_on:
      - db
      - rabbitmq-starter
    env_file:
      - ./backend/microservices/email/.env.docker

  users:
    container_name: user-microservice
    build:
      context: "./backend/"
      dockerfile: "./microservices/user/Dockerfile"
    networks:
      - bank
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:
      - ./backend/microservices/user/.env.docker
    environment:
      - PORT=8080

  kyc:
    container_name: kyc-microservice
    build:
      context: "./backend/"
      dockerfile: "./microservices/KYC/Dockerfile"
    networks:
      - bank
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:
      - ./backend/microservices/KYC/.env.docker
    environment:
      - PORT=8081

  nginx:
    container_name: load_balancer
    build: ./nginx
    networks:
      - bank
    depends_on:
      - users
      - kyc
    ports:
      - "8080:80"

networks:
  bank:
    driver: bridge
